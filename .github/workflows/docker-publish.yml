name: Docker Build and Publish

on:
  push:
    branches: ["master","main"]
  pull_request:
    branches: ["master","main"]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub
  REGISTRY: docker.ioname: ansible-lint
on:
  pull_request:
    branches: ["master", "main"]
  workflow_dispatch:
jobs:
  lint:
    name: Ansible Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Ansible and ansible-lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint
      - name: Run Ansible Lint
        run: |
          ansible-lint
  # Your Docker Hub username
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  # Repository name
  IMAGE_NAME: task-management-system

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Debug secrets
      - name: Debug Secrets
        run: |
          echo "Checking secrets..."
          echo "DOCKERHUB_USERNAME is set: ${{ secrets.DOCKERHUB_USERNAME != '' }}"
          echo "DOCKERHUB_TOKEN is set: ${{ secrets.DOCKERHUB_TOKEN != '' }}"

      # Login to Docker Hub
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Debug Docker login
      - name: Verify Docker login
        run: |
          echo "Checking Docker login status..."
          docker info
          docker login --help

      # Build and tag the Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build \
            --build-arg NODE_ENV=production \
            --build-arg PORT=3000 \
            --build-arg HOSTNAME=0.0.0.0 \
            -t ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            .

      # List built images
      - name: List Docker images
        run: |
          echo "Listing Docker images..."
          docker images

      # Push Docker image
      - name: Push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Pushing Docker image..."
          docker push ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Debug Docker push
      - name: Debug Docker push
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Debugging Docker push..."
          echo "Image name: ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}"
          echo "Tags:"
          echo "- latest"
          echo "- ${{ github.sha }}"
          docker images
          docker inspect ${{ env.REGISTRY }}/${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
